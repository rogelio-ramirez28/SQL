# On this project, I downloaded Spotify data from Kaggle.
# I then created a table to insert Spotify data into.
# Finally, I processed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#I then inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#What is the average Danceability of a song based on Popularity?
SELECT popularity
,SUM(danceability)/ COUNT(popularity) AS 'Average Danceability'
FROM BIT_DB.Spotifydata
GROUP BY popularity 
ORDER BY popularity DESC;

#What are the top ten songs that have an Energy rating above .6 and tempo higher than 140?
SELECT artist_name
,track_name
FROM BIT_DB.Spotifydata
WHERE Energy > .6
AND tempo > 140
ORDER BY popularity DESC
LIMIT 10;

Which artist has the most Hits and how many songs do they have on the top 50 Chart?
SELECT artist_name
,COUNT(track_name) AS "Number of Hits"
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY "Number of Hits" DESC
LIMIT 1;

What is the loudest song on the TOP 50 Chart?
SELECT artist_name
,track_name
,MIN(loudness) AS Loudest
FROM BIT_DB.Spotifydata;

What are the 5 longest songs converted to minutes from milliseconds?;
SELECT artist_name
,track_name
,(duration_ms/1000) /60 AS duration_mn
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC;
