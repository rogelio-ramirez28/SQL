#In this SQL query, I'm extracting data from a database containing multiple tables to analyze and quantify customer and order statistics.


#1. How many orders were placed in January?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND Product = 'iPhone';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum
FROM BIT_DB.customers CX
JOIN BIT_DB.FebSales FebSales
ON CX.order_id = FebSales.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT Product, MIN(price)
FROM BIT_DB.JanSales
WHERE Quantity >=1
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT ROUND(SUM(Quantity)* price,2) AS Revenue
,product
FROM BIT_DB.JanSales
GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product
,SUM(Quantity)
,SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT Count( DISTINCT CX.acctnum)
,AVG (quantity * price)
FROM BIT_DB.FebSales FebSales
LEFT JOIN BIT_DB.customers AS CX
ON CX.order_id = FebSales.orderid
WHERE Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product
,SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product 
